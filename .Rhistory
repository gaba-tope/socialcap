}
text_f <- "sans"
if (!(text_f %in% loaded_families)) {
message_text <- glue::glue("NOTE: text_font '{text_f}' familiy is not loaded. Make sure the font family is loaded
before calling ggplot().")
message(message_text)
}
text_f <- "oswald"
if (!(text_f %in% loaded_families)) {
message_text <- glue::glue("NOTE: text_font '{text_f}' familiy is not loaded. Make sure the font family is loaded
before calling ggplot().")
message(message_text)
}
socialcap_test <- function(gitname = "", twitname = "", facebkname = "",
linkedname = "", discdname = "",
iconcol = "#E30b5c",
textcol = "grey10",
textfont = "oswald",
iconpath = "./Font-Awesome-6-Brands-Regular-400.otf"
){
tryCatch(sysfonts::font_add(family = "Font_Awesome_6_Brands_reg", # Social media icon fonts
regular = iconpath),
error = function(e) message("An error occurred while loading the font for icon:\n", e)
)
# Message if textfont is not loaded in the session:
loaded_families <- sysfonts::font_families()
if (!(text_f %in% loaded_families)) {
message_text <- glue::glue("NOTE: text_font '{text_f}' familiy is not loaded. Make sure the font family is loaded
before calling ggplot().")
message(message_text)
}
showtext::showtext_auto()
# Github Info
github_icon <- "&#xf09b" #unicode f09b, used for HTML so &#x added.
github_username <- gitname
github_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{github_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{github_username}</span>")
# Twitter Info
twit_icon <- "&#xf099"
twit_username <- twitname
twit_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{twit_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{twit_username}</span>")
# Facebook Info
facebk_icon <- "&#xf09a"
facebk_username <- facebkname
facebk_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{facebk_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{facebk_username}</span>")
# LinkedIn Info
linked_icon <- "&#xf08c"
linked_username <- linkedname
linked_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{linked_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{linked_username}</span>")
# Discord Info
discd_icon <- "&#xf392"
discd_username <- discdname
discd_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{discd_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{discd_username}</span>")
# df for brand selection
brand_df <- data.frame(Brand = c("github", "twit", "facebk", "linked", "discd"),
Name = c(github_username, twit_username, facebk_username,
linked_username, discd_username),
Caption = c(github_caption, twit_caption, facebk_caption,
linked_caption, discd_caption),
Include = vector(length = 5))
brand_df <- dplyr::mutate(brand_df,
Include = ifelse(.data$Name == "", 0, 1))
print_df <- dplyr::filter(brand_df, .data$Include == 1)
num_row <- nrow(print_df)
social_caption <- print_df[1:num_row, 3]
# for (i in num_row){
#   brand_caption <- print_df[i, 3]
#   social_caption <- append(social_caption, brand_caption)
#
# }
social_caption_print <- paste(social_caption, collapse = " ")
cl <- attributes(social_caption_print)
return(social_caption_print)
}
cap <- socialcap_test(gitname = "hi", twitname = "bob", discdname = "tet")
socialcap_test <- function(gitname = "", twitname = "", facebkname = "",
linkedname = "", discdname = "",
iconcol = "#E30b5c",
textcol = "grey10",
textfont = "oswald",
iconpath = "./Font-Awesome-6-Brands-Regular-400.otf"
){
tryCatch(sysfonts::font_add(family = "Font_Awesome_6_Brands_reg", # Social media icon fonts
regular = iconpath),
error = function(e) message("An error occurred while loading the font for icon:\n", e)
)
# Message if textfont is not loaded in the session:
loaded_families <- sysfonts::font_families()
if (!(textfont %in% loaded_families)) {
message_text <- glue::glue("NOTE: text_font '{text_f}' familiy is not loaded. Make sure the font family is loaded
before calling ggplot().")
message(message_text)
}
showtext::showtext_auto()
# Github Info
github_icon <- "&#xf09b" #unicode f09b, used for HTML so &#x added.
github_username <- gitname
github_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{github_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{github_username}</span>")
# Twitter Info
twit_icon <- "&#xf099"
twit_username <- twitname
twit_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{twit_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{twit_username}</span>")
# Facebook Info
facebk_icon <- "&#xf09a"
facebk_username <- facebkname
facebk_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{facebk_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{facebk_username}</span>")
# LinkedIn Info
linked_icon <- "&#xf08c"
linked_username <- linkedname
linked_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{linked_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{linked_username}</span>")
# Discord Info
discd_icon <- "&#xf392"
discd_username <- discdname
discd_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{discd_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{discd_username}</span>")
# df for brand selection
brand_df <- data.frame(Brand = c("github", "twit", "facebk", "linked", "discd"),
Name = c(github_username, twit_username, facebk_username,
linked_username, discd_username),
Caption = c(github_caption, twit_caption, facebk_caption,
linked_caption, discd_caption),
Include = vector(length = 5))
brand_df <- dplyr::mutate(brand_df,
Include = ifelse(.data$Name == "", 0, 1))
print_df <- dplyr::filter(brand_df, .data$Include == 1)
num_row <- nrow(print_df)
social_caption <- print_df[1:num_row, 3]
# for (i in num_row){
#   brand_caption <- print_df[i, 3]
#   social_caption <- append(social_caption, brand_caption)
#
# }
social_caption_print <- paste(social_caption, collapse = " ")
cl <- attributes(social_caption_print)
return(social_caption_print)
}
cap <- socialcap_test(gitname = "hi", twitname = "bob", discdname = "tet")
cap <- socialcap_test(gitname = "hi", twitname = "bob", discdname = "tet", textfont = "bb")
socialcap_test <- function(gitname = "", twitname = "", facebkname = "",
linkedname = "", discdname = "",
iconcol = "#E30b5c",
textcol = "grey10",
textfont = "oswald",
iconpath = "./Font-Awesome-6-Brands-Regular-400.otf"
){
tryCatch(sysfonts::font_add(family = "Font_Awesome_6_Brands_reg", # Social media icon fonts
regular = iconpath),
error = function(e) message("An error occurred while loading the font for icon:\n", e)
)
# Message if textfont is not loaded in the session:
loaded_families <- sysfonts::font_families()
if (!(textfont %in% loaded_families)) {
message_text <- glue::glue("NOTE: text_font '{text_f}' familiy is not loaded. Make sure the font family is loaded
before calling ggplot().")
message(message_text)
}
showtext::showtext_auto()
# Github Info
github_icon <- "&#xf09b" #unicode f09b, used for HTML so &#x added.
github_username <- gitname
github_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{github_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{github_username}</span>")
# Twitter Info
twit_icon <- "&#xf099"
twit_username <- twitname
twit_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{twit_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{twit_username}</span>")
# Facebook Info
facebk_icon <- "&#xf09a"
facebk_username <- facebkname
facebk_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{facebk_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{facebk_username}</span>")
# LinkedIn Info
linked_icon <- "&#xf08c"
linked_username <- linkedname
linked_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{linked_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{linked_username}</span>")
# Discord Info
discd_icon <- "&#xf392"
discd_username <- discdname
discd_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{discd_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{discd_username}</span>")
# df for brand selection
brand_df <- data.frame(Brand = c("github", "twit", "facebk", "linked", "discd"),
Name = c(github_username, twit_username, facebk_username,
linked_username, discd_username),
Caption = c(github_caption, twit_caption, facebk_caption,
linked_caption, discd_caption),
Include = vector(length = 5))
brand_df <- dplyr::mutate(brand_df,
Include = ifelse(.data$Name == "", 0, 1))
print_df <- dplyr::filter(brand_df, .data$Include == 1)
num_row <- nrow(print_df)
social_caption <- print_df[1:num_row, 3]
# for (i in num_row){
#   brand_caption <- print_df[i, 3]
#   social_caption <- append(social_caption, brand_caption)
#
# }
social_caption_print <- paste(social_caption, collapse = " ")
cl <- attributes(social_caption_print)
return(social_caption_print)
}
cap <- socialcap_test(gitname = "hi", twitname = "bob", discdname = "tet", textfont = "bb")
socialcap_test <- function(gitname = "", twitname = "", facebkname = "",
linkedname = "", discdname = "",
iconcol = "#E30b5c",
textcol = "grey10",
textfont = "oswald",
iconpath = "./Font-Awesome-6-Brands-Regular-400.otf"
){
tryCatch(sysfonts::font_add(family = "Font_Awesome_6_Brands_reg", # Social media icon fonts
regular = iconpath),
error = function(e) message("An error occurred while loading the font for icon:\n", e)
)
# Message if textfont is not loaded in the session:
loaded_families <- sysfonts::font_families()
if (!(textfont %in% loaded_families)) {
message_text <- glue::glue("NOTE: text_font '{textfont}' familiy is not loaded. Make sure the font family is loaded
before calling ggplot().")
message(message_text)
}
showtext::showtext_auto()
# Github Info
github_icon <- "&#xf09b" #unicode f09b, used for HTML so &#x added.
github_username <- gitname
github_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{github_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{github_username}</span>")
# Twitter Info
twit_icon <- "&#xf099"
twit_username <- twitname
twit_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{twit_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{twit_username}</span>")
# Facebook Info
facebk_icon <- "&#xf09a"
facebk_username <- facebkname
facebk_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{facebk_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{facebk_username}</span>")
# LinkedIn Info
linked_icon <- "&#xf08c"
linked_username <- linkedname
linked_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{linked_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{linked_username}</span>")
# Discord Info
discd_icon <- "&#xf392"
discd_username <- discdname
discd_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{discd_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{discd_username}</span>")
# df for brand selection
brand_df <- data.frame(Brand = c("github", "twit", "facebk", "linked", "discd"),
Name = c(github_username, twit_username, facebk_username,
linked_username, discd_username),
Caption = c(github_caption, twit_caption, facebk_caption,
linked_caption, discd_caption),
Include = vector(length = 5))
brand_df <- dplyr::mutate(brand_df,
Include = ifelse(.data$Name == "", 0, 1))
print_df <- dplyr::filter(brand_df, .data$Include == 1)
num_row <- nrow(print_df)
social_caption <- print_df[1:num_row, 3]
# for (i in num_row){
#   brand_caption <- print_df[i, 3]
#   social_caption <- append(social_caption, brand_caption)
#
# }
social_caption_print <- paste(social_caption, collapse = " ")
cl <- attributes(social_caption_print)
return(social_caption_print)
}
cap <- socialcap_test(gitname = "hi", twitname = "bob", discdname = "tet", textfont = "bb")
socialcap_test <- function(gitname = "", twitname = "", facebkname = "",
linkedname = "", discdname = "",
iconcol = "#E30b5c",
textcol = "grey10",
textfont = "oswald",
iconpath = "./Font-Awesome-6-Brands-Regular-400.otf"
){
tryCatch(sysfonts::font_add(family = "Font_Awesome_6_Brands_reg", # Social media icon fonts
regular = iconpath),
error = function(e) message("An error occurred while loading the font for icon:\n", e)
)
# Message if textfont is not loaded in the session:
loaded_families <- sysfonts::font_families()
if (!(textfont %in% loaded_families)) {
message_text <- glue::glue("NOTE: text_font '{textfont}' familiy is not loaded. Make sure the font family is loaded
before calling ggplot().")
message(message_text)
}
showtext::showtext_auto()
# Github Info
github_icon <- "&#xf09b" #unicode f09b, used for HTML so &#x added.
github_username <- gitname
github_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{github_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{github_username}</span>")
# Twitter Info
twit_icon <- "&#xf099"
twit_username <- twitname
twit_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{twit_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{twit_username}</span>")
# Facebook Info
facebk_icon <- "&#xf09a"
facebk_username <- facebkname
facebk_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{facebk_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{facebk_username}</span>")
# LinkedIn Info
linked_icon <- "&#xf08c"
linked_username <- linkedname
linked_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{linked_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{linked_username}</span>")
# Discord Info
discd_icon <- "&#xf392"
discd_username <- discdname
discd_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{discd_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{discd_username}</span>")
# df for brand selection
brand_df <- data.frame(Brand = c("github", "twit", "facebk", "linked", "discd"),
Name = c(github_username, twit_username, facebk_username,
linked_username, discd_username),
Caption = c(github_caption, twit_caption, facebk_caption,
linked_caption, discd_caption),
Include = vector(length = 5))
brand_df <- dplyr::mutate(brand_df,
Include = ifelse(.data$Name == "", 0, 1))
print_df <- dplyr::filter(brand_df, .data$Include == 1)
num_row <- nrow(print_df)
social_caption <- print_df[1:num_row, 3]
# for (i in num_row){
#   brand_caption <- print_df[i, 3]
#   social_caption <- append(social_caption, brand_caption)
#
# }
social_caption_print <- paste(social_caption, collapse = " ")
cl <- attributes(social_caption_print)
print("------- Done -------")
return(social_caption_print)
}
cap <- socialcap_test(gitname = "hi", twitname = "bob", discdname = "tet", textfont = "bb")
socialcap_test <- function(gitname = "", twitname = "", facebkname = "",
linkedname = "", discdname = "",
iconcol = "#E30b5c",
textcol = "grey10",
textfont = "oswald",
iconpath = "./Font-Awesome-6-Brands-Regular-400.otf"
){
tryCatch(sysfonts::font_add(family = "Font_Awesome_6_Brands_reg", # Social media icon fonts
regular = iconpath),
error = function(e) message("An error occurred while loading the font for icon:\n", e)
)
# Message if textfont is not loaded in the session:
loaded_families <- sysfonts::font_families()
if (!(textfont %in% loaded_families)) {
message_text <- glue::glue("NOTE: text_font '{textfont}' familiy is not loaded. Make sure the font family is loaded
before calling ggplot().")
message(message_text)
}
showtext::showtext_auto()
# Github Info
github_icon <- "&#xf09b" #unicode f09b, used for HTML so &#x added.
github_username <- gitname
github_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{github_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{github_username}</span>")
# Twitter Info
twit_icon <- "&#xf099"
twit_username <- twitname
twit_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{twit_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{twit_username}</span>")
# Facebook Info
facebk_icon <- "&#xf09a"
facebk_username <- facebkname
facebk_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{facebk_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{facebk_username}</span>")
# LinkedIn Info
linked_icon <- "&#xf08c"
linked_username <- linkedname
linked_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{linked_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{linked_username}</span>")
# Discord Info
discd_icon <- "&#xf392"
discd_username <- discdname
discd_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{discd_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{discd_username}</span>")
# df for brand selection
brand_df <- data.frame(Brand = c("github", "twit", "facebk", "linked", "discd"),
Name = c(github_username, twit_username, facebk_username,
linked_username, discd_username),
Caption = c(github_caption, twit_caption, facebk_caption,
linked_caption, discd_caption),
Include = vector(length = 5))
brand_df <- dplyr::mutate(brand_df,
Include = ifelse(.data$Name == "", 0, 1))
print_df <- dplyr::filter(brand_df, .data$Include == 1)
num_row <- nrow(print_df)
social_caption <- print_df[1:num_row, 3]
# for (i in num_row){
#   brand_caption <- print_df[i, 3]
#   social_caption <- append(social_caption, brand_caption)
#
# }
social_caption_print <- paste(social_caption, collapse = " ")
cl <- attributes(social_caption_print)
cat("------- Done -------")
return(social_caption_print)
}
cap <- socialcap_test(gitname = "hi", twitname = "bob", discdname = "tet", textfont = "bb")
socialcap_test <- function(gitname = "", twitname = "", facebkname = "",
linkedname = "", discdname = "",
iconcol = "#E30b5c",
textcol = "grey10",
textfont = "oswald",
iconpath = "./Font-Awesome-6-Brands-Regular-400.otf"
){
tryCatch(sysfonts::font_add(family = "Font_Awesome_6_Brands_reg", # Social media icon fonts
regular = iconpath),
error = function(e) message("An error occurred while loading the font for icon:\n", e)
)
# Message if textfont is not loaded in the session:
loaded_families <- sysfonts::font_families()
if (!(textfont %in% loaded_families)) {
message_text <- glue::glue("NOTE: text_font '{textfont}' familiy is not loaded. Make sure the font family is loaded
before calling ggplot().")
message(message_text)
}
showtext::showtext_auto()
# Github Info
github_icon <- "&#xf09b" #unicode f09b, used for HTML so &#x added.
github_username <- gitname
github_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{github_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{github_username}</span>")
# Twitter Info
twit_icon <- "&#xf099"
twit_username <- twitname
twit_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{twit_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{twit_username}</span>")
# Facebook Info
facebk_icon <- "&#xf09a"
facebk_username <- facebkname
facebk_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{facebk_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{facebk_username}</span>")
# LinkedIn Info
linked_icon <- "&#xf08c"
linked_username <- linkedname
linked_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{linked_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{linked_username}</span>")
# Discord Info
discd_icon <- "&#xf392"
discd_username <- discdname
discd_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{discd_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{discd_username}</span>")
# df for brand selection
brand_df <- data.frame(Brand = c("github", "twit", "facebk", "linked", "discd"),
Name = c(github_username, twit_username, facebk_username,
linked_username, discd_username),
Caption = c(github_caption, twit_caption, facebk_caption,
linked_caption, discd_caption),
Include = vector(length = 5))
brand_df <- dplyr::mutate(brand_df,
Include = ifelse(.data$Name == "", 0, 1))
print_df <- dplyr::filter(brand_df, .data$Include == 1)
num_row <- nrow(print_df)
social_caption <- print_df[1:num_row, 3]
# for (i in num_row){
#   brand_caption <- print_df[i, 3]
#   social_caption <- append(social_caption, brand_caption)
#
# }
social_caption_print <- paste(social_caption, collapse = " ")
cl <- attributes(social_caption_print)
cat("------- Caption Generated -------")
return(social_caption_print)
}
cap <- socialcap_test(gitname = "hi", twitname = "bob", discdname = "tet", textfont = "bb")
socialcap_test(gitname = "hi", twitname = "bob", discdname = "tet")
socialcap_test <- function(gitname = "", twitname = "", facebkname = "",
linkedname = "", discdname = "",
iconcol = "#E30b5c",
textcol = "grey10",
textfont = "oswald",
iconpath = "./Font-Awesome-6-Brands-Regular-400.otf"
){
tryCatch(sysfonts::font_add(family = "Font_Awesome_6_Brands_reg", # Social media icon fonts
regular = iconpath),
error = function(e) message("An error occurred while loading the font for icon:\n", e)
)
# Message if textfont is not loaded in the session:
loaded_families <- sysfonts::font_families()
if (!(textfont %in% loaded_families)) {
message_text <- glue::glue("NOTE: text_font '{textfont}' familiy is not loaded. Make sure the font family is loaded
before calling ggplot().")
message(message_text)
}
showtext::showtext_auto()
# Github Info
github_icon <- "&#xf09b" #unicode f09b, used for HTML so &#x added.
github_username <- gitname
github_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{github_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{github_username}</span>")
# Twitter Info
twit_icon <- "&#xf099"
twit_username <- twitname
twit_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{twit_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{twit_username}</span>")
# Facebook Info
facebk_icon <- "&#xf09a"
facebk_username <- facebkname
facebk_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{facebk_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{facebk_username}</span>")
# LinkedIn Info
linked_icon <- "&#xf08c"
linked_username <- linkedname
linked_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{linked_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{linked_username}</span>")
# Discord Info
discd_icon <- "&#xf392"
discd_username <- discdname
discd_caption <- glue::glue("<span style='color: {iconcol};font-family:\"Font_Awesome_6_Brands_reg\";'>{discd_icon};</span><span style='color: {textcol}; font-family:\"{textfont}\";'>{discd_username}</span>")
# df for brand selection
brand_df <- data.frame(Brand = c("github", "twit", "facebk", "linked", "discd"),
Name = c(github_username, twit_username, facebk_username,
linked_username, discd_username),
Caption = c(github_caption, twit_caption, facebk_caption,
linked_caption, discd_caption),
Include = vector(length = 5))
brand_df <- dplyr::mutate(brand_df,
Include = ifelse(.data$Name == "", 0, 1))
print_df <- dplyr::filter(brand_df, .data$Include == 1)
num_row <- nrow(print_df)
social_caption <- print_df[1:num_row, 3]
# for (i in num_row){
#   brand_caption <- print_df[i, 3]
#   social_caption <- append(social_caption, brand_caption)
#
# }
social_caption_print <- paste(social_caption, collapse = " ")
cl <- attributes(social_caption_print)
cat("------- Caption Generated -------\n")
return(social_caption_print)
}
cap <- socialcap_test(gitname = "hi", twitname = "bob", discdname = "tet")
socialcap_test(gitname = "hi", twitname = "bob", discdname = "tet")
check()
devtools::install_github("gaba-tope/socialcap")
detach(package:socialcap)
devtools::install_github("gaba-tope/socialcap")
